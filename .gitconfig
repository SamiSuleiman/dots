[include]
	path = /home/sami/.config/delta/themes.gitconfig

[user]
	name = Sami Suleiman
	email = sulsami68@gmail.com
	projects = /home/sami/medina/projs

[alias]
	recent = "!f() { count=${1-10}; git for-each-ref --count=$count --sort=-committerdate refs/heads --format='%(HEAD)%(color:yellow)%(refname:short)|%(color:bold green)%(committerdate:relative)|%(color:blue)%(subject)|%(color:magenta)%(authorname)%(color:reset)' --color=always|column -ts'|'; }; f"
	st = "status -sb"
	ll = "log --oneline"
	cm = "commit -m"
	undo = "reset --soft HEAD~1"
	last = "log -1 HEAD --stat"
	ac = "!git add -A && git commit"
	br = "branch --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(contents:subject) %(color:green)(%(committerdate:relative)) [%(authorname)]' --sort=-committerdate"
	dc = "diff --cached"
	aa = "add ."
	std = "diff --stat"
	acp = "!git add . && git commit --amend --no-edit --no-verify && git push -f"
	pr = "pull --rebase"
	s = "switch"

	# Remove branches that have already been merged with main.
	dm = "!git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d"
	ap = "!git add . -p"

# Seach commits by commit message.
	sm = "!f() { \
		git log --date=short --decorate --pretty=custom --grep=\"$1\"; \
		}; f"

# Remove last commits (by default it removes the last commit).
	rlc = "!f() { \
		number_of_commits=\"${1:-1}\"; \
		git reset --hard \"HEAD~$number_of_commits\"; \
		}; f"


[color]
	ui = true

[fetch]
	prune = true

[core]
	editor = nvim
	excludesFile = ~/.gitignore_global
	pager = delta
	autocrlf = input

[diff]
	colorMoved = default
	navigate = true  # use n and N to move between diff sections
	renames = copies # Detect copies as well as renames.
	tool = nvim

[difftool "nvim"]
	cmd = nvim $LOCAL $REMOTE

[help]
	autoCorrect = immediate # If a command is mistyped, make Git automatically run the command it thinks the user wanted to type.

[pretty]
	custom = "%C(magenta)%h%C(red)%d %C(yellow)%ar %C(green)%s %C(yellow)(%an)"
    #                     │        │            │            │             └─ author name
    #                     │        │            │            └─ message
    #                     │        │            └─ date (relative)
    #                     │        └─ decorations (branch, heads or tags)
    #                     └─ hash (abbreviated)
[rerere]
	enabled = true

[branch]
  # Show most recently changed branches first.
	sort = -committerdate

[branch]
  # Show most recently changed branches first.
	sort = -committerdate

[delta]
	features = gruvmax-fang line-numbers decorations

[delta "decorations"]
	commit-decoration-style = bold yellow box ul
	file-style = bold yellow ul

[interactive]
	diffFilter = delta --color-only

[pull]
	rebase = true

[rebase]
	autoStash = true

[fetch]
	prune = true

[push]
	autoSetupRemote = true
