set-option -g default-shell /usr/bin/zsh
set -g allow-passthrough on
set -s escape-time 0
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM
set -g base-index 1
setw -g pane-base-index 1
set-option -g renumber-windows on

set-option -g status-left-length 100
set-option -g status-left " #{session_name} | "
set-option -g status-right " "
# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

set -as terminal-features ",*:RGB"
set -ag terminal-overrides ",xterm-256color:RGB"

set-option -g status-style "bg=#1b1b1b"
set -g status-right ''

set -g status-right "#(cd #{pane_current_path}; git rev-parse --abbrev-ref HEAD) | #(date +%%H:%%M' ~ '%%d/%%m/%%Y)"
set-option -g window-status-format "#{window_index}:#{window_name}#{window_flags} " 
set-option -g window-status-current-format "#{window_index}:#{window_name}#{window_flags} "
setw -g monitor-activity on
set-option -g window-status-current-style "fg=#d65d0e" 
#set-option -g window-status-current-style "fg=#31748F" 

unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

unbind m
bind m source-file ~/.tmux.conf\; display-message '~/.tmux.conf reloaded'


# Enable mouse mode
set -g mouse on

set-window-option -g mode-keys vi
bind -T copy-mode-vi v send-keys -X begin-selection
# For Linux (based)
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
set-option -g status-position bottom

bind  c  new-window      -c "#{pane_current_path}"
bind  %  split-window -h -c "#{pane_current_path}"
bind '"' split-window -v -c "#{pane_current_path}"

unbind-key x               # unbind-key “x” from it’s current job of “ask and then close”
bind-key x kill-pane       # rebind-key it to just “close”
bind-key X kill-session    # key combo for killing the entire session - <prefix> + shift + x

bind-key b set-option status

# Move around panes like in vim
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R
bind a display-popup -d "#{pane_current_path}"
# execute shell command
bind S run-shell "remux s"
# bind a display-popup -E "tmux new-session -A -s scratch"


# Smart pane switching with awareness of vim splits, doesn't work when you have vim windows
# is_vim='#{shell, "echo \"#{pane_current_command}\" | grep -iqE \"(^|\\/)(g?)(view|n?vim?)(diff)?\$\""}'
# bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
# bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
# bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
# bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
